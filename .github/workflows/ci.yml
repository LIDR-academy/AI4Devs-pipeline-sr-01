name: Deploy Backend App to EC2

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (for build & tests in CI)
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run tests
        working-directory: ./backend
        run: npm test -- --passWithNoTests

      - name: Build application
        working-directory: ./backend
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: 'eu-north-1'
  
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_INSTANCE }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          # Crear archivo de clave privada
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # Crear directorio de despliegue si no existe
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST 'mkdir -p react-app'
          
          # Transferir archivos construidos
          scp -o StrictHostKeyChecking=no -i private_key.pem -r src/* $USER@$HOST:react-app
          
          # Limpiar archivo de clave
          rm -f private_key.pem

