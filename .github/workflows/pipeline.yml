      - name: Deploy to EC2 via SSM
        shell: bash
        run: |
          set -euo pipefail
          IID="${{ steps.get_instance_id.outputs.instance_id }}"

          # Crear script de despliegue
          cat > deploy.sh <<'EOS'
          set -e
          sudo yum -y install git
          curl -fsSL https://rpm.nodesource.com/setup_20.x | sudo bash -
          sudo yum -y install nodejs

          cd ~
          if [ ! -d "AI4Devs-week12-pipeline-sr-01" ]; then
            git clone https://github.com/adriansendin/AI4Devs-week12-pipeline-sr-01.git
          fi

          cd AI4Devs-week12-pipeline-sr-01
          git fetch origin pipeline-ASM
          git checkout pipeline-ASM
          git pull --ff-only origin pipeline-ASM

          cd backend
          npm ci
          npm run build
          (pkill -f "node dist/index.js" || true)
          nohup npm start > ~/backend.log 2>&1 &

          cd ../frontend
          npm ci
          npm run build
          nohup npx --yes serve@14 -s build -l 3000 > ~/frontend.log 2>&1 &
          EOS

          # Codificar en base64 compatible
          B64=$(base64 deploy.sh | tr -d '\n')
          cat > params.json <<EOF
          {
            "commands": [
              "echo $B64 | base64 -d > /tmp/deploy.sh && chmod +x /tmp/deploy.sh && bash /tmp/deploy.sh"
            ]
          }
          EOF

          CMD_ID=$(aws ssm send-command \
            --instance-ids "$IID" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy by GitHub Actions" \
            --parameters file://params.json \
            --query "Command.CommandId" \
            --output text)

          aws ssm wait command-executed --command-id "$CMD_ID" --instance-id "$IID"
          aws ssm get-command-invocation --command-id "$CMD_ID" --instance-id "$IID" --query "Status,StatusDetails"
